services:
  restaurant-postgres:
    image: 'postgres:16.1-alpine3.18'
    container_name: restaurant-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "test123"
    volumes:
      - ./restaurant-postgres-data:/var/lib/postgresql/data
    ports:
      - 5435:5432
  customer-postgres:
    image: 'postgres:16.1-alpine3.18'
    container_name: customer-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "test123"
    volumes:
      - ./customer-postgres-data:/var/lib/postgresql/data
    ports:
      - 5436:5432
  authentication-postgres:
    image: 'postgres:16.1-alpine3.18'
    container_name: authentication-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "test123"
    volumes:
      - ./authentication-postgres-data:/var/lib/postgresql/data
    ports:
      - 5437:5432
  transaction-postgres:
    image: 'postgres:16.1-alpine3.18'
    container_name: transaction-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "test123"
    volumes:
      - ./transaction-postgres-data:/var/lib/postgresql/data
    ports:
      - 5438:5432
  activemq:
    image: 'apache/activemq-artemis:2.33.0-alpine'
    container_name: activemq
    restart: always
    ports:
      - 8161:8161
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:5.1.0
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 30000
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 30000
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.request.logger=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_CREATE_TOPICS: "transaction:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    hostname: kafka
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9092 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
  restaurant:
    image: restaurant-service
    restart: always
    hostname: restaurant
    build:
      dockerfile: Dockerfile
      context: ../restaurant
    environment:
      - POSTGRES_HOST=restaurant-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=test123
      - APPLICATION_PORT=8080
      - ACTIVEMQ_HOST=activemq
      - ACTIVEMQ_PORT=61616
      - ACTIVEMQ_USERNAME=artemis
      - ACTIVEMQ_PASSWORD=artemis
      - AUTH_URL=auth-service
      - AUTH_PORT=8080
    deploy:
      replicas: 3
    depends_on:
      - restaurant-postgres
    volumes:
      - ./logs/restaurant/:/var/log/restaurant
  customer:
    image: customer-service
    restart: always
    hostname: customer
    build:
      dockerfile: Dockerfile
      context: ../customer
    environment:
      - POSTGRES_HOST=customer-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=test123
      - APPLICATION_PORT=8080
      - ACTIVEMQ_HOST=activemq
      - ACTIVEMQ_PORT=61616
      - ACTIVEMQ_USERNAME=artemis
      - ACTIVEMQ_PASSWORD=artemis
      - AUTH_URL=auth-service
      - AUTH_PORT=8080
      - RESTAURANT_URL=restaurant
      - RESTAURANT_PORT=8080
      - LAMBDA_URL=https://knizanhfhvi4f2soacs7w7qoqq0fcljc.lambda-url.eu-north-1.on.aws/
      - KAFKA_URL=kafka
      - KAFKA_PORT=9092
    deploy:
      replicas: 3
    depends_on:
      - customer-postgres
      - kafka
    volumes:
      - ./logs/customer/:/var/log/customer
  auth-service:
    image: auth-service
    restart: always
    hostname: authentication
    build:
      dockerfile: Dockerfile
      context: ../authentication
    environment:
      - POSTGRES_HOST=authentication-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=test123
      - APPLICATION_PORT=8080
      - ACTIVEMQ_HOST=activemq
      - ACTIVEMQ_PORT=61616
      - ACTIVEMQ_USERNAME=artemis
      - ACTIVEMQ_PASSWORD=artemis
      - RESTAURANT_URL=http://restaurant:8080
      - CUSTOMER_URL=http://customer:8080
      - TRAN_WS=ws://transaction:8080
    deploy:
      replicas: 1
    depends_on:
      - authentication-postgres
    volumes:
      - ./logs/authentication/:/var/log/authentication
    ports:
      - 8030:8080
  transaction:
    image: transaction-service
    restart: always
    hostname: transaction
    build:
      dockerfile: Dockerfile
      context: ../transaction
    environment:
      - POSTGRES_HOST=transaction-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=test123
      - APPLICATION_PORT=8080
      - KAFKA_URL=kafka
      - KAFKA_PORT=9092
    deploy:
      replicas: 3
    depends_on:
      - transaction-postgres
      - kafka
      - zookeeper
    volumes:
      - ./logs/transaction/:/var/log/transaction
      